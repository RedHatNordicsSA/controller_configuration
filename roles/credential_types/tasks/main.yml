---
- name: Add Credential Types
  credential_type:
    name:                           "{{ __controller_credential_type_item.name | mandatory }}"
    description:                    "{{ __controller_credential_type_item.description | default(omit, true) }}"
    injectors:                      "{{ __controller_credential_type_item.injectors | default(omit, true) | regex_replace('[ ]{2,}','') }}"
    inputs:                         "{{ __controller_credential_type_item.inputs | default(omit, true) }}"
    kind:                           "{{ __controller_credential_type_item.kind | default('cloud') }}"
    state:                          "{{ __controller_credential_type_item.state | default(controller_state | default('present')) }}"

    # Role specific options
    controller_username:            "{{ controller_username | default(omit, true) }}"
    controller_password:            "{{ controller_password | default(omit, true) }}"
    controller_oauthtoken:          "{{ controller_oauthtoken | default(omit, true) }}"
    controller_host:                "{{ controller_hostname | default(omit, true) }}"
    controller_config_file:         "{{ controller_config_file | default(omit, true) }}"
    validate_certs:                 "{{ controller_validate_certs | default(omit) }}"
  loop: "{{ controller_credential_types }}"
  loop_control:
    loop_var: __controller_credential_type_item
  no_log: "{{ controller_configuration_credential_types_secure_logging }}"
  async: 1000
  poll: 0
  register: __credentialTypes_job_async
  changed_when: not __credentialTypes_job_async.changed
  vars:
    ansible_async_dir: '/tmp/.ansible_async'

- name: "Configure Controller Credential Types | Wait for finish the credential types creation"
  async_status:
    jid: "{{ __credentialTypes_job_async_result_item.ansible_job_id }}"
  register: __credentialTypes_job_async_result
  until: __credentialTypes_job_async_result.finished
  retries: "{{ controller_configuration_credential_types_async_retries }}"
  delay: "{{ controller_configuration_credential_types_async_delay }}"
  loop: "{{ __credentialTypes_job_async.results }}"
  loop_control:
    loop_var: __credentialTypes_job_async_result_item
  when: __credentialTypes_job_async_result_item.ansible_job_id is defined
  no_log: "{{ controller_configuration_credential_types_secure_logging }}"
  vars:
    ansible_async_dir: '/tmp/.ansible_async'
...
