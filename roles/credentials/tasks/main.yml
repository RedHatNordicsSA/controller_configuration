---
- name: Add Credentials
  credential:
    name:                           "{{ __controller_credentials_item.name | mandatory }}"
    new_name:                       "{{ __controller_credentials_item.new_name | default(omit, true) }}"
    copy_from:                      "{{ __controller_credentials_item.copy_from | default(omit, true) }}"
    description:                    "{{ __controller_credentials_item.description | default(omit, true) }}"
    organization:                   "{{ __controller_credentials_item.organization.name | default( __controller_credentials_item.organization | default(omit, true)) }}"
    credential_type:                "{{ __controller_credentials_item.credential_type.name | default( __controller_credentials_item.credential_type | default(omit, true)) }}"
    inputs:                         "{{ __controller_credentials_item.inputs | default(omit, true) }}"
    user:                           "{{ __controller_credentials_item.user.username | default( __controller_credentials_item.user | default(omit, true)) }}"
    team:                           "{{ __controller_credentials_item.team.name | default( __controller_credentials_item.team | default(omit, true)) }}"
    update_secrets:                 "{{ __controller_credentials_item.update_secrets | default(omit) }}"
    state:                          "{{ __controller_credentials_item.state | default(controller_state | default('present')) }}"

    # Role specific options
    controller_username:            "{{ controller_username | default(omit, true) }}"
    controller_password:            "{{ controller_password | default(omit, true) }}"
    controller_oauthtoken:          "{{ controller_oauthtoken | default(omit, true) }}"
    controller_host:                "{{ controller_hostname | default(omit, true) }}"
    controller_config_file:         "{{ controller_config_file | default(omit, true) }}"
    validate_certs:                 "{{ controller_validate_certs | default(omit) }}"
  loop: "{{ controller_credentials }}"
  loop_control:
    loop_var: __controller_credentials_item
  no_log: "{{ controller_configuration_credentials_secure_logging }}"
  async: 1000
  poll: 0
  register: __credentials_job_async
  changed_when: not __credentials_job_async.changed
  vars:
    ansible_async_dir: '/tmp/.ansible_async'

- name: "Configure Controller Credentials | Wait for finish the credential creation"
  async_status:
    jid: "{{ __credentials_job_async_results_item.ansible_job_id }}"
  register: __credentials_job_async_result
  until: __credentials_job_async_result.finished
  retries: "{{ controller_configuration_credentials_async_retries }}"
  delay: "{{ controller_configuration_credentials_async_delay }}"
  loop: "{{ __credentials_job_async.results }}"
  loop_control:
    loop_var: __credentials_job_async_results_item
  when: __credentials_job_async_results_item.ansible_job_id is defined
  no_log: "{{ controller_configuration_credentials_secure_logging }}"
  vars:
    ansible_async_dir: '/tmp/.ansible_async'
...
